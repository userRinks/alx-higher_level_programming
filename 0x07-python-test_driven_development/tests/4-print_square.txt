# Test cases
>>> print_square = __import__('4-print_square').print_square

# Test Case 1: Square with size 1
>>> print_square(1)
#

# Test Case 2: Square with size 4
>>> print_square(4)
####
####
####
####

# Test Case 3: Square with size 10
>>> print_square(11)
###########
###########
###########
###########
###########
###########
###########
###########
###########
###########
###########

# Test Case 4: Square with size 0
>>> print_square(0)

# Test Case 5: Invalid size (not an integer)
>>> print_square("not an int")
Traceback (most recent call last):
...
TypeError: size must be an integer

# Test Case 6: Invalid size (float)
>>> print_square(5.5)
Traceback (most recent call last):
...
TypeError: size must be an integer

# Test Case 7: Invalid size (None)
>>> print_square(None)
Traceback (most recent call last):
TypeError: size must be an integer

# Test Case 8: Invalid size (less than zero)
>>> print_square(-7)
Traceback (most recent call last):
...
ValueError: size must be >= 0


# Test Case 9: Invalid size (float less than zero)
>>> print_square(-7.5)
Traceback (most recent call last):
...
TypeError: size must be an integer

# Test Case 10: Missing required positional argument
>>> print_square()
Traceback (most recent call last):
...
TypeError: print_square() missing 1 required positional argument: 'size'
