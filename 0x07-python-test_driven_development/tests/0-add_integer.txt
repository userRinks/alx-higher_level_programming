>>> add_integer = __import__('0-add_integer').add_integer

# Test Case 1: Addition of positive integers
>>> add_integer(1,3)
4

# Test Case 2: Addition of positive and negative integers
>>> add_integer(1, -2)
-1

# Test Case 3: Addition of negative and positive integers
>>> add_integer(-1, 2)
1

# Test Case 4: Addition of negative integers
>>> add_integer(-1, -1)
-2

# Test Case 5: TypeError - a is None
>>> add_integer(None)
TypeError('a must be an integer')

# Test Case 6: TypeError - a is a string
>>> add_integer("string", 12)
TypeError('a must be an integer')

# Test Case 7: TypeError - b is a string
>> add_integer(12, "string")
TypeError('b must be an integer')

# Test Case 8: TypeError - b is None
>>> add_integer(12, None)
TypeError('b must be an integer')

# Test Case 9: TypeError - a is None
>>> add_integer(None, 12)
TypeError('a must be an integer')

# Test Case 10: Addition of float and integer
>>> add_integer(2.0, 1)
3

# Test Case 11: Addition of two float numbers
>>> add_integer(2.0, 3.1)
5

# Test Case 12: Addition of two float numbers
>>> add_integer(2.5, 2.5)
4

# Test Case 13: Addition of integer and float
>>> add_integer(1, 2.7)
3

# Test Case 14: TypeError - b is a string
>>> add_integer(2.0, "string")
TypeError('b must be an integer')

# Test Case 15: TypeError - b is None
>>> add_integer(2.1, None)
TypeError('b must be an integer')

# Test Case 16: TypeError - b is a list
>>> add_integer(2.1, [1,2,3,4])
TypeError('b must be an integer')

# Test Case 17: Addition of float and integer
>>> add_integer(float(2), int(3))
5

# Test Case 18: TypeError - a and b are strings
>>> add_integer("Hello", "World")
TypeError('a must be an integer')
